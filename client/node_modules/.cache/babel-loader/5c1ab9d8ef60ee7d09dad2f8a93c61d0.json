{"ast":null,"code":"// /* Step 1 import React, { Component } and axios\n//  *\n//  */\n// import React, { Component } from 'react'\n// import axios from 'axios'\n// import { Link } from 'react-router-dom'\n// import SingleCourt from './SingleCourt'\n// /* Step 2\n//  * Rename this class to reflect the component being created\n//  *\n//  */\n// export default class Players extends Component {\n//     /* Step 3\n//     * Create a state for the component to store view data\n//     *\n//     */\n//     state = {\n//         players: [],\n//         isNewFormDisplayed: false,\n//         newPlayer: {\n//             name: '',\n//             ageGroup: '',\n//             position: '',\n//             bio: ''\n//         }\n//     }\n//     /* Step 4\n//     * Use componentDidMount to retrieve any data to display\n//     *   Here you can make calls to your local express server\n//     *   or to an external API\n//     *   setState can be run here as well\n//     *   -REMINDER remember `setState` it is an async function\n//     */\n//     componentDidMount() {\n//         this.getAllPlayers()\n//     }\n//     getAllPlayers() {\n//         axios.get('/api/players')\n//             .then((res) => {\n//                 this.setState({players: res.data})\n//             })\n//     }\n//     handleToggleNewForm = () => {\n//         this.setState((state) => {\n//             return {isNewFormDisplayed: !state.isNewFormDisplayed}\n//         })\n//     }\n//     handleInputChange = (event) => {\n//         const copiedPlayer = {...this.state.newPlayer}\n//         copiedPlayer[event.target.name] = event.target.value\n//         this.setState({newPlayer: copiedPlayer})\n//     }\n//     handleSubmit = (event) => {\n//         event.preventDefault()\n//         axios.post(`/api/players`, this.state.newPlayer)\n//         .then(() => {\n//             this.setState({isNewFormDisplayed: false})\n//             this.getAllPlayers()\n//         })\n//     }\n//     /* Step 5\n//     *  The render function manages what is shown in the browser\n//     *  TODO: delete the jsx returned\n//     *   and replace it with your own custom jsx template\n//     *\n//     */\n//     render() {\n//         let playersList = this.state.players.map((player) => {\n//             return (\n//                 <div>\n//                 <Link \n//                 key={player._id}\n//                 to={`/players/${player._id}`}>{player.name}</Link>\n//                 </div>\n//             )\n//         })\n//         return (\n//                 this.state.isNewFormDisplayed\n//                 ?\n//                 <form onSubmit={this.handleSubmit}>\n//                 <label htmlFor='player-name'>Player Name:</label>\n//                 <input \n//                 type='text'\n//                 id='player-name'\n//                 name='name'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.name}\n//                 />\n//                 <label htmlFor='player-age-group'>Age-Group:</label>\n//                 <input \n//                 type='text'\n//                 id='player-age-group'\n//                 name='ageGroup'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.ageGroup}\n//                 />\n//                 <label htmlFor='player-position'>Position:</label>\n//                 <input \n//                 type='text'\n//                 id='player-position'\n//                 name='position'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.position}\n//                 />\n//                 <label htmlFor='player-bio'>Biography:</label>\n//                 <input \n//                 type='text'\n//                 id='player-bio'\n//                 name='bio'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.bio}\n//                 />\n//                 <input\n//                 type='submit'\n//                 value='Add Player'\n//                 />\n//                 </form>\n//                 :\n//                 <div>\n//             <button onClick={this.handleToggleNewForm}>Join this court</button>\n//                 {playersList}\n//                  </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Players.js"],"names":[],"mappingssourcesContent":["// /* Step 1 import React, { Component } and axios\n//  *\n//  */\n// import React, { Component } from 'react'\n// import axios from 'axios'\n// import { Link } from 'react-router-dom'\n// import SingleCourt from './SingleCourt'\n// /* Step 2\n//  * Rename this class to reflect the component being created\n//  *\n//  */\n// export default class Players extends Component {\n\n//     /* Step 3\n//     * Create a state for the component to store view data\n//     *\n//     */\n//     state = {\n//         players: [],\n//         isNewFormDisplayed: false,\n//         newPlayer: {\n//             name: '',\n//             ageGroup: '',\n//             position: '',\n//             bio: ''\n//         }\n//     }\n\n//     /* Step 4\n//     * Use componentDidMount to retrieve any data to display\n//     *   Here you can make calls to your local express server\n//     *   or to an external API\n//     *   setState can be run here as well\n//     *   -REMINDER remember `setState` it is an async function\n//     */\n//     componentDidMount() {\n//         this.getAllPlayers()\n//     }\n\n//     getAllPlayers() {\n//         axios.get('/api/players')\n//             .then((res) => {\n//                 this.setState({players: res.data})\n//             })\n//     }\n\n//     handleToggleNewForm = () => {\n//         this.setState((state) => {\n//             return {isNewFormDisplayed: !state.isNewFormDisplayed}\n//         })\n//     }\n\n//     handleInputChange = (event) => {\n//         const copiedPlayer = {...this.state.newPlayer}\n//         copiedPlayer[event.target.name] = event.target.value\n//         this.setState({newPlayer: copiedPlayer})\n//     }\n\n//     handleSubmit = (event) => {\n//         event.preventDefault()\n\n//         axios.post(`/api/players`, this.state.newPlayer)\n//         .then(() => {\n//             this.setState({isNewFormDisplayed: false})\n//             this.getAllPlayers()\n//         })\n//     }\n\n//     /* Step 5\n//     *  The render function manages what is shown in the browser\n//     *  TODO: delete the jsx returned\n//     *   and replace it with your own custom jsx template\n//     *\n//     */\n//     render() {\n\n//         let playersList = this.state.players.map((player) => {\n//             return (\n//                 <div>\n//                 <Link \n//                 key={player._id}\n//                 to={`/players/${player._id}`}>{player.name}</Link>\n\n//                 </div>\n//             )\n//         })\n//         return (\n            \n//                 this.state.isNewFormDisplayed\n//                 ?\n//                 <form onSubmit={this.handleSubmit}>\n//                 <label htmlFor='player-name'>Player Name:</label>\n//                 <input \n//                 type='text'\n//                 id='player-name'\n//                 name='name'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.name}\n//                 />\n\n//                 <label htmlFor='player-age-group'>Age-Group:</label>\n//                 <input \n//                 type='text'\n//                 id='player-age-group'\n//                 name='ageGroup'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.ageGroup}\n//                 />\n\n//                 <label htmlFor='player-position'>Position:</label>\n//                 <input \n//                 type='text'\n//                 id='player-position'\n//                 name='position'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.position}\n//                 />\n\n//                 <label htmlFor='player-bio'>Biography:</label>\n//                 <input \n//                 type='text'\n//                 id='player-bio'\n//                 name='bio'\n//                 onChange={this.handleInputChange}\n//                 value ={this.state.newPlayer.bio}\n//                 />\n//                 <input\n//                 type='submit'\n//                 value='Add Player'\n//                 />\n//                 </form>\n                \n//                 :\n//                 <div>\n                \n//             <button onClick={this.handleToggleNewForm}>Join this court</button>\n//                 {playersList}\n//                  </div>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}