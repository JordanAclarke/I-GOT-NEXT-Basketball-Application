{"ast":null,"code":"import _objectSpread from \"/Users/JordanClarke/Desktop/basketball-meetup/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Courts.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CreateCourtForm from './Court/CreateCourtForm';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class Courts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courts: [],\n      isNewFormDisplayed: false,\n      newCourt: {\n        gymName: '',\n        address: '',\n        numberOfPlayers: '',\n        entryPrice: ''\n      }\n      /* Step 4\n      * Use componentDidMount to retrieve any data to display\n      *   Here you can make calls to your local express server\n      *   or to an external API\n      *   setState can be run here as well\n      *   -REMINDER remember `setState` it is an async function\n      */\n\n    };\n\n    this.getAllCourts = () => {\n      axios.get('/api/courts').then(res => {\n        this.setState({\n          courts: res.data\n        });\n      });\n    };\n\n    this.handleToggleNewForm = () => {\n      this.setState(state => {\n        return {\n          isNewFormDisplayed: !state.isNewFormDisplayed\n        };\n      });\n    };\n\n    this.handleInputChange = event => {\n      const copiedCourt = _objectSpread({}, this.state.newCourt);\n\n      copiedCourt[event.target.name] = event.target.value;\n      this.setState({\n        newCourt: copiedCourt\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      axios.post(\"/api/courts\", this.state.newCourt).then(() => {\n        this.setState({\n          isNewFormDisplayed: false\n        });\n        this.getAllCourts();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getAllCourts();\n  }\n\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n  render() {\n    React.createElement(CreateCourtForm, {\n      courts: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n    let courtsList = this.state.courts.map(court => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Link, {\n        key: court._id,\n        to: \"/courts/\".concat(court._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, court.gymName));\n    });\n    return this.state.isNewFormDisplayed ? React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"court-gym-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Court Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"court-gym-name\",\n      name: \"gymName\",\n      onChange: this.handleInputChange,\n      value: this.state.newCourt.gymName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"court-address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Address:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"court-address\",\n      name: \"address\",\n      onChange: this.handleInputChange,\n      value: this.state.newCourt.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"court-number-of-players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Players Needed:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"court-number-of-players\",\n      name: \"numberOfPlayers\",\n      onChange: this.handleInputChange,\n      value: this.state.newCourt.numberOfPlayers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"entry-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Entry Price:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"court-entry-price\",\n      name: \"entryPrice\",\n      onChange: this.handleInputChange,\n      value: this.state.newCourt.entryPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Court\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleToggleNewForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Add Your Court\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Home Page\")), courtsList);\n  }\n\n}","map":{"version":3,"sources":["/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Courts.js"],"names":["React","Component","axios","Link","CreateCourtForm","Courts","state","courts","isNewFormDisplayed","newCourt","gymName","address","numberOfPlayers","entryPrice","getAllCourts","get","then","res","setState","data","handleToggleNewForm","handleInputChange","event","copiedCourt","target","name","value","handleSubmit","preventDefault","post","componentDidMount","render","courtsList","map","court","_id"],"mappings":"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","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport CreateCourtForm from './Court/CreateCourtForm';\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class Courts extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        courts: [],\n        isNewFormDisplayed: false,\n        newCourt : {\n            gymName: '',\n            address: '',\n            numberOfPlayers: '',\n            entryPrice: ''\n        }\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    componentDidMount() {\n        this.getAllCourts()\n    }\n\n    getAllCourts = () => {\n        axios.get('/api/courts')\n            .then((res) => {\n                this.setState({courts: res.data})\n            })\n    }\n\n    handleToggleNewForm = () => {\n        this.setState((state) => {\n            return {isNewFormDisplayed: !state.isNewFormDisplayed}\n        })\n    }\n\n    handleInputChange = (event) => {\n        const copiedCourt = {...this.state.newCourt}\n        copiedCourt[event.target.name] = event.target.value\n\n        this.setState({newCourt: copiedCourt})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        axios.post(`/api/courts`, this.state.newCourt)\n        .then(() => {\n            this.setState({isNewFormDisplayed: false})\n            this.getAllCourts()\n        })\n    }\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        <CreateCourtForm \n        courts\n        />\n        let courtsList = this.state.courts.map((court) => {\n            return (\n                <div>\n                <Link \n                key={court._id}\n                to={`/courts/${court._id}`}\n                >\n                {court.gymName}\n                </Link>\n                </div>\n\n            )\n        })\n        return (\n            this.state.isNewFormDisplayed\n            ?\n                 <form onSubmit={this.handleSubmit}>\n                <label htmlFor='court-gym-name'>Court Name</label>\n                <input\n                type='text'\n                id='court-gym-name'\n                name='gymName'\n                onChange={this.handleInputChange}\n                value={this.state.newCourt.gymName}\n                />\n\n                <label htmlFor='court-address'>Address:</label>\n                <input\n                type='text'\n                id='court-address'\n                name='address'\n                onChange={this.handleInputChange}\n                value={this.state.newCourt.address}\n                />\n\n                <label htmlFor='court-number-of-players'>Players Needed:</label>\n                <input\n                type='text'\n                id='court-number-of-players'\n                name='numberOfPlayers'\n                onChange={this.handleInputChange}\n                value={this.state.newCourt.numberOfPlayers}\n                />\n\n                <label htmlFor='entry-price'>Entry Price:</label>\n                <input\n                type='text'\n                id='court-entry-price'\n                name='entryPrice'\n                onChange={this.handleInputChange}\n                value={this.state.newCourt.entryPrice}\n                />\n\n                <input type='submit' value='Create Court' />\n            </form>\n            :\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <button onClick={this.handleToggleNewForm}>Add Your Court</button>\n               \n                   <button>\n                   <Link to='/'>Home Page</Link>\n                   </button>\n                {courtsList}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}