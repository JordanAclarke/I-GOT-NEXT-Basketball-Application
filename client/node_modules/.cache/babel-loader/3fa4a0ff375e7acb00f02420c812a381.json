{"ast":null,"code":"var _jsxFileName = \"/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Players.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class Players extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isNewFormDisplayed: false,\n      newPlayer: {\n        name: '',\n        ageGroup: '',\n        position: '',\n        bio: ''\n      }\n      /* Step 4\n      * Use componentDidMount to retrieve any data to display\n      *   Here you can make calls to your local express server\n      *   or to an external API\n      *   setState can be run here as well\n      *   -REMINDER remember `setState` it is an async function\n      */\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/players').then(res => {\n      this.setState({\n        players: res.data\n      });\n    });\n  }\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n\n\n  render() {\n    let playerList = this.state.players.map(player => {\n      return React.createElement(Link, {\n        to: \"/players/\".concat(player._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, player.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Hello World\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Players.js"],"names":["React","Component","axios","Link","Players","state","players","isNewFormDisplayed","newPlayer","name","ageGroup","position","bio","componentDidMount","get","then","res","setState","data","render","playerList","map","player","_id"],"mappings":";;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;;;AAIA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAM3CI,KAN2C,GAMnC;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,kBAAkB,EAAE,KAFhB;AAGJC,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,QAAQ,EAAE,EAHH;AAIPC,QAAAA,GAAG,EAAE;AAJE;AAQf;;;;;;;;AAXQ,KANmC;AAAA;;AAwB3CC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,KAAK,CAACY,GAAN,CAAU,cAAV,EACKC,IADL,CACWC,GAAD,IAAS;AACX,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAEU,GAAG,CAACE;AAAd,OAAd;AACH,KAHL;AAIH;AAED;;;;;;;;AAMAC,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAG,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAwBC,MAAD,IAAY;AAChD,aACI,oBAAC,IAAD;AAAM,QAAA,EAAE,qBAAcA,MAAM,CAACC,GAArB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCD,MAAM,CAACb,IAA5C,CADJ;AAGH,KAJgB,CAAjB;AAKA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ;AAMH;;AAlD0C","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class Players extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        players: [],\n        isNewFormDisplayed: false,\n        newPlayer: {\n            name: '',\n            ageGroup: '',\n            position: '',\n            bio: ''\n        }\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    componentDidMount() {\n        axios.get('/api/players')\n            .then((res) => {\n                this.setState({players: res.data})\n            })\n    }\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n\n        let playerList = this.state.players.map((player) => {\n            return (\n                <Link to={`/players/${player._id}`}>{player.name}</Link>\n            )\n        })\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>Hello World</h1>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}