{"ast":null,"code":"import _objectSpread from \"/Users/JordanClarke/Desktop/basketball-meetup/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Players.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport SingleCourt from './SingleCourt';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class Players extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isNewFormDisplayed: false,\n      newPlayer: {\n        name: '',\n        ageGroup: '',\n        position: '',\n        bio: ''\n      }\n      /* Step 4\n      * Use componentDidMount to retrieve any data to display\n      *   Here you can make calls to your local express server\n      *   or to an external API\n      *   setState can be run here as well\n      *   -REMINDER remember `setState` it is an async function\n      */\n\n    };\n\n    this.handleToggleNewForm = () => {\n      this.setState(state => {\n        return {\n          isNewFormDisplayed: !state.isNewFormDisplayed\n        };\n      });\n    };\n\n    this.handleInputChange = event => {\n      const copiedPlayer = _objectSpread({}, this.state.newPlayer);\n\n      copiedPlayer[event.target.name] = event.target.value;\n      this.setState({\n        newPlayer: copiedPlayer\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      axios.post(\"/api/players\", this.state.newPlayer).then(() => {\n        this.setState({\n          isNewFormDisplayed: false\n        });\n        this.getAllPlayers();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getAllPlayers();\n  }\n\n  getAllPlayers() {\n    axios.get('/api/players').then(res => {\n      this.setState({\n        players: res.data\n      });\n    });\n  }\n\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n  render() {\n    let playersList = this.state.players.map(player => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Link, {\n        key: player._id,\n        to: \"/players/\".concat(player._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, player.name));\n    });\n    return this.state.isNewFormDisplayed ? React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Player Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"player-name\",\n      name: \"name\",\n      onChange: this.handleInputChange,\n      value: this.state.newPlayer.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"player-age-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Age-Group:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"player-age-group\",\n      name: \"ageGroup\",\n      onChange: this.handleInputChange,\n      value: this.state.newPlayer.ageGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"player-position\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Position:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"player-position\",\n      name: \"position\",\n      onChange: this.handleInputChange,\n      value: this.state.newPlayer.position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"player-bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Biography:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"player-bio\",\n      name: \"bio\",\n      onChange: this.handleInputChange,\n      value: this.state.newPlayer.bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleToggleNewForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Join this court\"), playersList);\n  }\n\n}","map":{"version":3,"sources":["/Users/JordanClarke/Desktop/basketball-meetup/client/src/components/Players.js"],"names":["React","Component","axios","Link","SingleCourt","Players","state","players","isNewFormDisplayed","newPlayer","name","ageGroup","position","bio","handleToggleNewForm","setState","handleInputChange","event","copiedPlayer","target","value","handleSubmit","preventDefault","post","then","getAllPlayers","componentDidMount","get","res","data","render","playersList","map","player","_id"],"mappings":"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","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport SingleCourt from './SingleCourt'\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class Players extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        players: [],\n        isNewFormDisplayed: false,\n        newPlayer: {\n            name: '',\n            ageGroup: '',\n            position: '',\n            bio: ''\n        }\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    componentDidMount() {\n        this.getAllPlayers()\n    }\n\n    getAllPlayers() {\n        axios.get('/api/players')\n            .then((res) => {\n                this.setState({players: res.data})\n            })\n    }\n\n    handleToggleNewForm = () => {\n        this.setState((state) => {\n            return {isNewFormDisplayed: !state.isNewFormDisplayed}\n        })\n    }\n\n    handleInputChange = (event) => {\n        const copiedPlayer = {...this.state.newPlayer}\n        copiedPlayer[event.target.name] = event.target.value\n        this.setState({newPlayer: copiedPlayer})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        axios.post(`/api/players`, this.state.newPlayer)\n        .then(() => {\n            this.setState({isNewFormDisplayed: false})\n            this.getAllPlayers()\n        })\n    }\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n\n        let playersList = this.state.players.map((player) => {\n            return (\n                <div>\n                <Link \n                key={player._id}\n                to={`/players/${player._id}`}>{player.name}</Link>\n        \n                </div>\n            )\n        })\n        return (\n            \n                this.state.isNewFormDisplayed\n                ?\n                <form onSubmit={this.handleSubmit}>\n                <label htmlFor='player-name'>Player Name:</label>\n                <input \n                type='text'\n                id='player-name'\n                name='name'\n                onChange={this.handleInputChange}\n                value ={this.state.newPlayer.name}\n                />\n\n                <label htmlFor='player-age-group'>Age-Group:</label>\n                <input \n                type='text'\n                id='player-age-group'\n                name='ageGroup'\n                onChange={this.handleInputChange}\n                value ={this.state.newPlayer.ageGroup}\n                />\n\n                <label htmlFor='player-position'>Position:</label>\n                <input \n                type='text'\n                id='player-position'\n                name='position'\n                onChange={this.handleInputChange}\n                value ={this.state.newPlayer.position}\n                />\n\n                <label htmlFor='player-bio'>Biography:</label>\n                <input \n                type='text'\n                id='player-bio'\n                name='bio'\n                onChange={this.handleInputChange}\n                value ={this.state.newPlayer.bio}\n                />\n                <input\n                type='submit'\n                value='Add Player'\n                />\n                </form>\n                :\n                <div>\n                \n            <button onClick={this.handleToggleNewForm}>Join this court</button>\n                {playersList}\n                 </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}